# GraphQL schema example
#
# https://gqlgen.com/getting-started/

type Todo {
  id: ID!
  text: String!
  done: Boolean!
  user: User!
  userId: String!
}

type User {
  id: ID!
  name: String!
}

type Labelvaluepair {
  value: String!
  label: String!
}

type Query {
  todos: [Todo!]!
  allsys(
    host: String!
    port: Int!
    database: String!
    measurement: String!
    energy: Boolean
  ): String
  alllocbysys(
    host: String!
    port: Int!
    database: String!
    measurement: String!
    system: String!
    energy: Boolean
  ): String
  allequipbysysloc(
    host: String!
    port: Int!
    database: String!
    measurement: String!
    system: String!
    location: String!
    energy: Boolean
  ): [Labelvaluepair]
  allparambyequip(
    host: String!
    port: Int!
    database: String!
    measurement: String!
    equips: String!
    energy: Boolean
  ): [Labelvaluepair]
  timeseriesbyid(
    aggrnum: Int
    limit: Int
    startTime: String
    endTime: String
    database: String!
    measurement: String!
    pointName: String!
    aggreTpye: AggregationsType!
  ): [Timeseries]
}

input NewTodo {
  text: String!
  userId: String!
}

type Timeseries {
    time: String
    Block: String
    BuildingName: String
    EquipmentName: String
    FunctionType: String
    prefername: String
    id: String
    value: String
}

enum AggregationsType {
  count
  sum
  mean
  max
  min
  first
  last
}

type Mutation {
  createTodo(input: NewTodo!): Todo!
}
